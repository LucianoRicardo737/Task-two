{"version":3,"sources":["components/Index.js","query/getSellerPublications.js","App.js","reportWebVitals.js","db/db.js","index.js"],"names":["Index","data","useState","goTop","setGoTop","window","onscroll","y","scrollY","toArray","Object","values","id","className","div","animate","opacity","transition","ease","duration","style","onClick","scroll","top","left","behavior","getSellerPublications","map","value","index","src","product","images","alt","itemName","price","stock","getSellerPublication","gql","App","useQuery","loading","error","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAwFeA,EAnFD,SAACC,GAAU,IAAD,IAEMC,oBAAS,GAFf,mBAEbC,EAFa,KAENC,EAFM,KAIpBC,OAAOC,SAAW,WACd,IAAIC,EAAIF,OAAOG,QAEXJ,EADAG,EAAI,KAOZ,IASME,EAAUC,OAAOC,OAAOV,GAM9B,OACI,sBAAKW,GAAG,QAAQC,UAAU,OAA1B,UAEKV,GACA,cAAC,IAAOW,IAAR,CACAC,QAAS,CAAEC,QAAS,GACpBC,WAAY,CAAEC,KAAM,SAAUC,SAAU,IACxCC,MAAO,CAAEJ,QAAS,KAClBH,UAAU,QAJV,SAKO,wBACIQ,QAAS,WAxBzBhB,OAAOiB,OAAO,CACVC,IAAK,EACLC,KAAM,EACNC,SAAU,YAsBEZ,UAAU,4BAFd,sBAMN,eAAC,IAAOC,IAAR,CACJC,QAAS,CAAEC,QAAS,GACpBC,WAAY,CAAEC,KAAM,SAAUC,SAAU,IACxCC,MAAO,CAAEJ,QAAS,KAClBH,UAAU,uDAJN,UAKE,oBAAIA,UAAU,kCAAd,sBALF,UAQMJ,EAAQ,UARd,aAQM,EAAYiB,sBAAsBC,KAAI,SAACC,EAAOC,GAC1C,OACI,qBAAKhB,UAAU,YAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,qBAAKiB,IAAG,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAOG,QAAQC,OAAQnB,UAAU,yCAAyCoB,IAAI,QACxF,qBAAKpB,UAAU,YAAf,SACI,oBAAIA,UAAU,yBAAd,gBAAwCe,QAAxC,IAAwCA,OAAxC,EAAwCA,EAAOG,QAAQG,aAM3D,sBAAKrB,UAAU,2BAAf,UAEI,uBAAMA,UAAU,SAAhB,wBAAsC,sBAAMA,UAAU,mBAAhB,SAAoCe,EAAMO,WAAoB,uBAAMtB,UAAU,QAAhB,uBAAoC,sBACxIA,UAAU,mBAD8H,SAC1Ge,EAAMQ,kBAbhBP,a,ySCxDrD,IAAMQ,E,MAAuBC,GAAH,KCsClBC,MA/Bf,WAAgB,IAAD,EAEoBC,mBAASH,GAAlCI,EAFK,EAELA,QAASC,EAFJ,EAEIA,MAAOzC,EAFX,EAEWA,KAMxB,OAJIwC,GAASE,QAAQC,IAAI,mBACrBF,GAAOC,QAAQC,IAAI,qBACnB3C,GAAM0C,QAAQC,IAAI,4BAGpB,qBAAK/B,UAAU,MAAf,SACE,qBAAKA,UAAU,mCAAmCD,GAAG,YAArD,UAGc,IAAV6B,EACA,cAAC,IAAO3B,IAAR,CACAC,QAAS,CAAEC,QAAS,GACpBC,WAAY,CAAEC,KAAM,SAAUC,SAAU,IACxCC,MAAO,CAAEJ,QAAS,KAHlB,SAKE,kDAIA,cAAC,EAAD,CAAOf,KAAMA,SCpBV4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCLDQ,G,MAAS,I,MAAIC,GAAa,CACnCC,IAAK,wECUTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,iBAAD,CAAgBL,OAAQA,EAAxB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.7f15ea35.chunk.js","sourcesContent":["\nimport React, { useState } from 'react';\n\nimport { motion } from 'framer-motion';\n\nconst Index = (data) => {\n    //state for button go top\n    const [goTop, setGoTop] = useState(false);\n    //capturing vertical scroll\n    window.onscroll = function () {\n        var y = window.scrollY;\n        if (y > 55) {\n            setGoTop(true)\n        } else {\n            setGoTop(false)\n        }\n    };\n    //function go top\n    const top = () => {\n        window.scroll({\n            top: 0,\n            left: 0,\n            behavior: 'smooth'\n        });\n    }\n    \n    //objecto to array for maping\n    const toArray = Object.values(data);\n\n\n\n\n\n    return (\n        <div id='index' className='p-3 '>\n            {/* button go top */}\n            {goTop &&\n             <motion.div\n             animate={{ opacity: 1 }}\n             transition={{ ease: \"easeIn\", duration: 0.3 }}\n             style={{ opacity: \"0\" }} \n             className='goTop'>\n                    <button\n                        onClick={() => top()}\n                        className='btn btn btn-outline-info '>Go top</button>\n                </motion.div>\n            }\n\n              <motion.div\n          animate={{ opacity: 1 }}\n          transition={{ ease: \"easeIn\", duration: 0.3 }}\n          style={{ opacity: \"0\" }}  \n          className=\"row row-cols-1 row-cols-md-3 row-cols-lg-4 g-4 mt-n4\">\n                <h2 className='col-lg-12 col-12 col-md-12 mb-4'>Task Two</h2>\n\n                {\n                    toArray[0]?.getSellerPublications.map((value, index) => {\n                        return (\n                            <div className=\"col mb-4 \" key={index}  >\n                                <div className=\"card h-100 shadow\">\n                                    <img src={value?.product.images} className=\"rounded-3 card-img-top alt mx-auto p-2\" alt=\"...\" />\n                                    <div className=\"card-body\">\n                                        <h5 className=\"card-title title mt-n4\">{value?.product.itemName}</h5>\n\n                                    </div>\n\n\n\n                                    <div className='row mt-n4 card-text mb-3'>\n\n                                        <span className='col-6 '>Precio:&nbsp;<span className='font-weight-bold'>{value.price}</span></span><span className='col-6'>Stock:&nbsp;<span \n                                        className='font-weight-bold'>{value.stock}</span></span>\n\n                                    </div>\n\n\n                                </div>\n                            </div>\n\n                        )\n                    })\n                }\n\n        </motion.div>\n        </div>\n    )\n}\n\nexport default Index\n","import { gql } from \"apollo-boost\";\n\nexport const getSellerPublication = gql`\n{\n  getSellerPublications(sellerId:\"4cc88cdc-2d92-47ff-ab3f-9831367b889c\"){\n         product{\n             itemName\n             images\n         }\n         price\n         stock\n       }\n    }\n`;","\nimport Index from \"./components/Index\";\n\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport { motion } from 'framer-motion';\n\nimport {getSellerPublication} from './query/getSellerPublications'\n\nfunction App() {\n\n  const { loading, error, data } = useQuery(getSellerPublication);\n\n  if (loading) console.log(\"Loading Data...\");\n  if (error) console.log(\"Fail to load data\");\n  if (data) console.log(\"data loaded successfully\");\n\n  return (\n    <div className=\"App\">\n      <div className='container-fluid text-center mt-5' id='container'>\n        \n        {\n          loading===true ? \n          <motion.div\n          animate={{ opacity: 1 }}\n          transition={{ ease: \"easeIn\", duration: 0.1 }}\n          style={{ opacity: \"0\" }} > \n          \n            <p>Loading Data...</p> \n          \n          </motion.div> \n          :\n            <Index data={data} />\n        }\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ApolloClient from \"apollo-boost\";\n\nexport const client = new ApolloClient({\n    uri: \"https://y3db9uqb67.execute-api.sa-east-1.amazonaws.com/dev/graphql\"\n  });","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nimport { ApolloProvider } from \"@apollo/react-hooks\";\n\nimport {client} from './db/db'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}